environment:
  matrix:
  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    PowerShellEdition: Desktop
    BuildConfiguration: Release
  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    PowerShellEdition: PowerShellCore
    BuildConfiguration: Release

# clone directory
clone_folder: C:\projects\psscriptanalyzer

# cache Nuget packages and dotnet CLI cache
cache:
  - '%USERPROFILE%\.nuget\packages -> appveyor.yml'
  - '%LocalAppData%\Microsoft\dotnet -> appveyor.yml'

install:
  - ps:   if ($env:PowerShellEdition -eq 'Desktop')        { Import-Module .\tools\Appveyor.psm1; Invoke-AppveyorInstall }
  - pwsh: if ($env:PowerShellEdition -eq 'PowerShellCore') { Import-Module .\tools\Appveyor.psm1; Invoke-AppveyorInstall }

build_script:
  - ps:   if ($env:PowerShellEdition -eq 'Desktop')        { Invoke-AppveyorBuild 'FullCLR'     $env:BuildConfiguration 'C:\projects\psscriptanalyzer' }
  - pwsh: if ($env:PowerShellEdition -eq 'PowerShellCore') { Invoke-AppveyorBuild 'NetStandard' $env:BuildConfiguration 'C:\projects\psscriptanalyzer' }

# Run Pester tests and store the results
test_script:
    - SET PATH=c:\Program Files\WindowsPowerShell\Modules\;%PATH%;
    - ps:   if ($env:PowerShellEdition -eq 'Desktop')        { Invoke-AppveyorTest 'C:\projects\psscriptanalyzer'}
    - pwsh: if ($env:PowerShellEdition -eq 'PowerShellCore') { Invoke-AppveyorTest 'C:\projects\psscriptanalyzer'}

# Upload the project along with test results as a zip archive
on_finish:
    - ps: Invoke-AppveyorFinish
