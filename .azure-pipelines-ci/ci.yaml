variables:
  # Avoid expensive initialization of dotnet cli, see: https://donovanbrown.com/post/Stop-wasting-time-during-NET-Core-builds
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

stages:
  - stage: Build
    jobs:
      - job: 'Full_Build'
        pool:
          vmImage: windows-latest
        steps:
        - pwsh: |
            Import-Module .\tools\appveyor.psm1
            Invoke-AppveyorInstall -SkipPesterInstallation
            ./build.ps1 -Configuration 'Release' -All
            ./PSCompatibilityCollector/build.ps1 -Configuration 'Release'
          displayName: 'Full Build'
        # - task: PublishPipelineArtifact@1
        #   displayName: 'Publish Pipeline Artifact: out Folder'
        #   inputs:
        #     targetPath: '$(Build.SourcesDirectory)/out'
        #     artifactName: out
  - stage: Test
    jobs:
      - job:
        strategy:
          matrix:
            Ubuntu_16_04:
              vmImage: ubuntu-16.04
            Ubuntu_16_04_preview:
              vmImage: ubuntu-16.04
              PowerShellVersion: 'Preview'
            Ubuntu_18_04:
              vmImage: ubuntu-18.04
            Ubuntu_18_04_preview:
              vmImage: ubuntu-18.04
              PowerShellVersion: 'Preview'
            macOS_10_14_Mojave:
              vmImage: macOS-10.14
            macOS_10_15_Catalina:
              vmImage: macOS-10.15
            Windows_Server2016_PowerShell_Core:
              vmImage: vs2017-win2016
            Windows_Server2019_PowerShell_Core:
              vmImage: windows-2019
            Windows_Server2016_PowerShell_5_1:
              vmImage: vs2017-win2016
              PowerShellVersion: WindowsPowerShell
            Windows_Server2019_PowerShell_5_1:
              vmImage: windows-2019
              PowerShellVersion: WindowsPowerShell
        pool:
          vmImage: $[ variables['vmImage'] ]
        steps:
        - template: templates/test.yaml
